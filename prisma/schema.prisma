// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Conversation {
  id        String    @id @default(cuid())
  userId    String
  messages  Message[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  url       String
  title     String?

  user User @relation(fields: [userId], references: [id])

  @@index([userId])
}

model User {
  id                      String   @id // Este ser√° o kindeId
  firstName               String?
  lastName                String?
  name                    String
  email                   String   @unique
  profileImage            String?
  stripeCustomerId        String?  @unique
  stripeSubscriptionId    String?
  stripeSubscriptionStatus String?
  stripePriceId           String?

  askRequests             Int      @default(0)
  vectorRequests          Int      @default(0)

  createdAt               DateTime @default(now())
  updatedAt               DateTime @updatedAt

  conversations Conversation[]
}

model Message {
  id             String       @id @default(cuid())
  content        String
  role           String
  conversationId String
  conversation   Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt

  @@index([conversationId])
}
